name: Crysis VR Automated Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]

  workflow_dispatch:

jobs:
  build:
    name: Build Crysis VR
    runs-on: windows-2022

    permissions: write-all

    steps:
      - uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Configure build
        shell: bash
        run: |
          mkdir -p $GITHUB_WORKSPACE/installer/assembly
          echo "CRYSIS_INSTALL_DIR=$GITHUB_WORKSPACE\\installer\\assembly" >> $GITHUB_ENV

      - name: Build project
        working-directory: Code
        run: msbuild CrysisMod.sln /p:Configuration=Release -m

      - name: Build launcher
        working-directory: Code/ThirdParty/c1-launcher
        run: |
          mkdir build64
          cd build64
          cmake -D CMAKE_BUILD_TYPE=Release ..
          cmake --build . --parallel --config Release

      - name: Create installer
        working-directory: installer
        shell: cmd
        run: create_installer.bat

      - name: Zip debug symbols
        run: |
          7z a -t7z crysisvr_pdbs.7z Bin64\*.pdb

      - name: Update Github dev release
        if: github.ref == 'refs/heads/main'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Crysis VR development build"
          files: |
            installer/crysis-vrmod*.exe
            crysisvr_pdbs.7z

      - name: Create tagged Github release
        if: github.ref_type == 'tag'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: "Crysis VR release ${{ github.ref_name }}"
          files: |
            installer/crysis-vrmod*.exe
            crysisvr_pdbs.7z
